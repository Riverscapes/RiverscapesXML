<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsL="http://www.w3.org/2001/XMLSchema">

  <!-- =========================================================================
  
  Common Elements:
  - All projects must have the Following:
  
  ============================================================================== -->
  <!-- Top Leve item: Here's where the overall project gets Defined -->
  <xs:complexType name="ProjectBaseType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="1" maxOccurs="1" />
      <xs:element type="xs:string" name="ProjectType" minOccurs="1" maxOccurs="1" />
      <xs:element type="MetaDataType" name="Warehouse" minOccurs="0" maxOccurs="1" />
      <xs:element type="MetaDataType" name="MetaData" minOccurs="1" maxOccurs="1" />
      <xs:element type="DataSetContainerType" name="Inputs" minOccurs="0" maxOccurs="1" />
      <!-- <xs:element type="RealizationsBaseType" name="Realizations" minOccurs="1" maxOccurs="1" /> -->
    </xs:sequence>
  </xs:complexType>

  <!-- <xs:complexType name="RealizationsBaseType">
    <xs:choice maxOccurs="unbounded">
      <xs:element type="RealizationType" name="Realization" maxOccurs="unbounded" minOccurs="0" />
    </xs:choice>
  </xs:complexType> -->


  <!-- A Project can have realizations -->
  <xs:complexType name="RealizationType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="1" maxOccurs="1" />
      <xs:element type="MetaDataType" name="MetaData" minOccurs="0" maxOccurs="1" />
      <xs:element type="ParametersType" name="Parameters" minOccurs="0" maxOccurs="1" />
      <xs:element type="SimpleFileType" name="LogFile" minOccurs="0" maxOccurs="1" />
      <!-- <xs:element type="DataSetContainerType" name="Inputs" minOccurs="0" maxOccurs="1" />
      <xs:element type="DataSetContainerType" name="Intermediates" minOccurs="0" maxOccurs="1" />
      <xs:element type="DataSetContainerType" name="Outputs" minOccurs="0" maxOccurs="1" /> -->
    </xs:sequence>
    <xs:attribute type="xs:string" name="id" use="required" />
    <xs:attribute type="xs:boolean" name="promoted" use="optional" />
    <xs:attribute type="xs:string" name="dateCreated" use="required" />
    <xs:attribute type="xs:string" name="productVersion" use="required" />
    <xs:attribute type="xs:string" name="guid" />
  </xs:complexType>

  <!--Realizations Must have an Analyses-->
  <xs:complexType name="AnalysesType" mixed="true">
    <xs:sequence>
      <xs:element type="AnalysisType" name="Analysis" maxOccurs="unbounded" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>


  <!--Realizations Must have an Analysis-->
  <xs:complexType name="AnalysisType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="0" />
      <xs:element type="MetricsType" name="Metrics" minOccurs="0" />
      <xs:element type="DataSetContainerType" name="Outputs" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <!-- The type of string in the <Meta> tag. These are optional -->
  <xs:simpleType name="KeyValueType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="guid" />
      <xs:enumeration value="url" />
      <xs:enumeration value="path" />
      <xs:enumeration value="imgurl" />
      <xs:enumeration value="isodate" />
      <xs:enumeration value="timestamp" />
      <xs:enumeration value="float" />
      <xs:enumeration value="int" />
      <xs:enumeration value="richtext" />
      <xs:enumeration value="markdown" />
      <xs:enumeration value="json" />
    </xs:restriction>
  </xs:simpleType>


  <xs:complexType name="MetaType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="name" use="required" />
        <xs:attribute type="KeyValueType" name="type" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="MetaDataType">
    <xs:sequence>
      <xs:element type="MetaType" name="Meta" maxOccurs="unbounded" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="name" use="required" />
        <xs:attribute type="KeyValueType" name="type" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ParametersType">
    <xs:sequence>
      <xs:element type="ParamType" name="Param" maxOccurs="unbounded" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MetricType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="name" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="MetricsType">
    <xs:sequence>
      <xs:element type="MetricType" name="Metric" maxOccurs="unbounded" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <!-- =========================================================================
  
  Datasets: Inputs, Outputs, files etc....
  
  ============================================================================== -->

  <!-- Let's define our Input/Output Containers and what they can contain -->
  <xs:complexType name="DataSetContainerType">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <!-- A scalar value is possible as an input or an output but use <Params> if you can -->
      <xs:element type="xs:string" name="Value" />
      <xs:element type="RasterType" name="Raster" />
      <xs:element type="RasterType" name="Cover" />
      <xs:element type="RasterType" name="Substrate" />
      <xs:element type="RasterType" name="Velocity" />
      <xs:element type="RasterType" name="Depth" />
      <xs:element type="VectorType" name="Vector" />
      <xs:element type="GeopackageType" name="Geopackage" />
      <xs:element type="VectorType" name="StreamNetwork" />
      <xs:element type="TINType" name="TIN" />
      <xs:element type="DEMType" name="DEM" />
      <xs:element type="HillShadeType" name="HillShade" />
      <xs:element type="SimpleFileType" name="CSV" />
      <xs:element type="SimpleFileType" name="Image" />
      <xs:element type="SimpleFileType" name="Video" />
      <xs:element type="SimpleFileType" name="DataTable" />
      <xs:element type="SimpleFileType" name="Database" />
      <xs:element type="SimpleFileType" name="SurveyQualityDB" />
      <xs:element type="SimpleFileType" name="InstrumentFile" />
      <xs:element type="SimpleFileType" name="AuxInstrumentFile" />
      <xs:element type="SimpleFileType" name="MSAccessDB" />
      <xs:element type="SimpleFileType" name="SQLiteDB" />
      <xs:element type="SimpleFileType" name="PDF" />
      <xs:element type="SimpleFileType" name="HTMLFile" />
      <xs:element type="SimpleFileType" name="ZipFile" />
    </xs:choice>
  </xs:complexType>

  <!-- The base type  -->
  <xs:complexType name="DataSetType" mixed="true">
    <xs:sequence>
      <xs:element type="xs:string" name="Name" minOccurs="0" maxOccurs="1" />
      <!--Path is ALWAYS relative inside a project-->
      <xs:element type="xs:string" name="Path" minOccurs="0" maxOccurs="1" />
      <xs:element type="xs:string" name="Project" minOccurs="0" maxOccurs="1" />
      <xs:element type="MetaDataType" name="MetaData" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute type="xs:string" name="id" />
    <xs:attribute type="xs:string" name="guid" />
    <xs:attribute type="xs:string" name="ref" />
  </xs:complexType>

  <!-- Now some Subtypes -->
  <xs:complexType name="GeoSpatialType">
    <xs:complexContent>
      <xs:extension base="DataSetType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ContextLayerType" mixed="true">
    <xs:complexContent>
      <xs:extension base="DataSetType">
        <xs:sequence>
          <xs:element type="xs:string" name="URL" default="http://" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SimpleFileType">
    <xs:complexContent>
      <xs:extension base="DataSetType" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Here are the GeoSpatial Types-->
  <xs:complexType name="RasterType">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TINType">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VectorType">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GeopackageType" mixed="true">
    <xs:complexContent>
      <xs:extension base="GeoSpatialType">
        <xs:sequence>
          <xs:element type="GeopackageLayersType" name="Layers" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GeopackageLayersType">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:element type="RasterType" name="Raster" />
      <xs:element type="VectorType" name="Vector" />
    </xs:choice>
  </xs:complexType>


  <!-- DEMs extend rasters -->
  <xs:complexType name="DEMType">
    <xs:complexContent>
      <xs:extension base="RasterType" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Here are our context layers -->
  <xs:complexType name="HillShadeType">
    <xs:complexContent>
      <xs:extension base="ContextLayerType" />
    </xs:complexContent>
  </xs:complexType>


  <!-- =========================================================================
  
  Realizations: This is where things get custom for each type of thing.
  
  ============================================================================== -->

</xs:schema>